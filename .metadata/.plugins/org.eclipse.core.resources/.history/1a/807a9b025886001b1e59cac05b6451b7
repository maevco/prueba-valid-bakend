package com.solid.pruebasolid.service;

public class PersonaServiceImpl implements PersonaServiceDecl {
	
	@Autowired
	PersonaRepository personaRepository;

	@Override
	public List<Persona> getAllPersonas() {
		return personaRepository.findAll();
	}

	@Override
	public Persona findById(long id) {
		return personaRepository.findById(id);
	}

	@Override
	public Persona add(Persona persona) {
		long daysBetween = ChronoUnit.DAYS.between(persona.getFechaNacimiento().toInstant(), fechaActual.toInstant());		
		
		if (daysBetween / 365 < 18) {
			throw new IllegalArgumentException("Edad no permitida, debe ser mayor de edad: "+ daysBetween/365 + " Años");
		}
		
		if(personaRepository.existsByTipoNumeroIdentificacion(persona.getTipoIdentificacion(), persona.getNumeroIdentificacion())==true) {
			  throw new DuplicateKeyException("Ya existe usuario con tipo y numero de identificación ingresado: " + persona.getNumeroIdentificacion());
		}		
		
		
		
		return personaRepository.save(persona);

	}

	@Override
	public Persona edit(Persona persona) {
		return personaRepository.save(persona);
	}


}
